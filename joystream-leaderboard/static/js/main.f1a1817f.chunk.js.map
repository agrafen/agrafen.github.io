{"version":3,"sources":["components/table.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["defaultColumn","Filter","Header","column","id","filterTypes","fuzzyText","rows","filterValue","defaultPropGetter","Table","columns","data","initSortBy","striped","getRowProps","useTable","initialState","pageIndex","pageSize","sortBy","useFilters","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","className","cn","celled","map","headerGroup","Row","getHeaderGroupProps","headers","HeaderCell","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","Body","row","i","cells","cell","index","Cell","getCellProps","Menu","floated","pagination","Item","onClick","disabled","length","type","defaultValue","onChange","e","target","value","Number","style","width","App","useState","rawMembersData","setMembersData","cutoff","setCutoff","search","setSearch","useEffect","a","axios","get","result","scores","totalScores","Date","toLocaleDateString","fetchData","useMemo","accessor","directScores","score","filter","d","memberHandle","includes","reduce","prev","curr","handleSearch","func","delay","timer","useCallback","args","clearTimeout","setTimeout","useDebounce","StrictMode","Input","placeholder","float","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f1a1817f.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\nimport {\r\n  HeaderProps,\r\n  useTable,\r\n  usePagination,\r\n  useSortBy,\r\n  useFilters,\r\n  useGlobalFilter,\r\n  FilterValue,\r\n  IdType,\r\n  Row,\r\n} from 'react-table';\r\nimport { Menu, Table as UiTable } from 'semantic-ui-react';\r\nimport cn from 'classnames';\r\nimport { TableProperties } from './table-types';\r\n\r\nconst DefaultHeader: React.FC<HeaderProps<any>> = ({ column }) => (\r\n  <>{column.id}</>\r\n);\r\n\r\nfunction DefaultColumnFilter<T extends object>() {\r\n  return null;\r\n}\r\n\r\nconst defaultColumn = {\r\n  Filter: DefaultColumnFilter,\r\n  Header: DefaultHeader,\r\n};\r\n\r\nexport function fuzzyTextFilter<T extends object>(\r\n  rows: Array<Row<T>>,\r\n  id: IdType<T>,\r\n  filterValue: FilterValue\r\n) {\r\n  return null;\r\n}\r\n\r\nconst filterTypes = {\r\n  fuzzyText: fuzzyTextFilter,\r\n};\r\n\r\nconst defaultPropGetter = () => ({});\r\n\r\nfunction Table<T extends object>({\r\n  columns,\r\n  data,\r\n  initSortBy = [],\r\n  striped = false,\r\n  getRowProps = defaultPropGetter,\r\n}: TableProperties<T>): ReactElement {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable<T>(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: {\r\n        pageIndex: 0,\r\n        pageSize: 100,\r\n        sortBy: initSortBy,\r\n      },\r\n      defaultColumn,\r\n      filterTypes,\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <UiTable\r\n        {...getTableProps()}\r\n        className={cn('Table', {\r\n          Table: striped,\r\n        })}\r\n        striped\r\n      >\r\n        <UiTable.Header celled>\r\n          {headerGroups.map((headerGroup: any) => (\r\n            <UiTable.Row {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column: any) => (\r\n                <UiTable.HeaderCell {...column.getHeaderProps()}>\r\n                  <div {...column.getSortByToggleProps()}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' ðŸ”½'\r\n                          : ' ðŸ”¼'\r\n                        : ''}\r\n                    </span>\r\n                  </div>\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </UiTable.HeaderCell>\r\n              ))}\r\n            </UiTable.Row>\r\n          ))}\r\n        </UiTable.Header>\r\n        <UiTable.Body {...getTableBodyProps()}>\r\n          {page.map((row: any, i: any) => {\r\n            prepareRow(row);\r\n            return (\r\n              <UiTable.Row {...row.getRowProps(getRowProps(row))}>\r\n                {row.cells.map((cell: any) => {\r\n                  if (cell.column.id === 'index') {\r\n                    return <td>{row.index + 1}</td>;\r\n                  }\r\n\r\n                  return (\r\n                    <UiTable.Cell {...cell.getCellProps()}>\r\n                      {cell.render('Cell')}\r\n                    </UiTable.Cell>\r\n                  );\r\n                })}\r\n              </UiTable.Row>\r\n            );\r\n          })}\r\n        </UiTable.Body>\r\n      </UiTable>\r\n      <Menu floated=\"right\" pagination>\r\n        <Menu.Item onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Menu.Item>{' '}\r\n        <Menu.Item onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Menu.Item>{' '}\r\n        <Menu.Item onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Menu.Item>{' '}\r\n        <Menu.Item\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}\r\n        >\r\n          {'>>'}\r\n        </Menu.Item>{' '}\r\n        <Menu.Item>\r\n          Page&nbsp;\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{' '}\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          Go to page:&nbsp;&nbsp;\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n              gotoPage(page);\r\n            }}\r\n            style={{ width: '50px' }}\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <select\r\n            value={pageSize}\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n          >\r\n            {[100, 1000].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\nexport default Table;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { Input } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Column } from 'react-table';\n\nimport Table from './components/table';\n\nimport './App.css';\n\ninterface Member {\n  memberHandle: string;\n  directScores: number[];\n  memberId: number;\n  totalDirectScore: number;\n  totalReferralScore: number;\n  totalScore: number;\n  position?: number;\n  positionFM?: number;\n  positionNFM: number;\n}\n\nfunction useDebounce(func: Function, delay: number = 500) {\n  let timer: any = null;\n\n  const debounce = useCallback(\n    (...args: any) => {\n      clearTimeout(timer);\n\n      timer = setTimeout(() => func(...args), delay);\n    },\n    [func]\n  );\n\n  return debounce;\n}\n\nexport default function App() {\n  const [rawMembersData, setMembersData] = useState<Member[]>([]);\n  const [cutoff, setCutoff] = useState<string | null>(null);\n  const [search, setSearch] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      const result: any = await axios.get(\n        'https://raw.githubusercontent.com/Joystream/founding-members/main/data/fm-info.json'\n      );\n\n      setMembersData(result.data.scores.totalScores);\n      setCutoff(new Date(result.data.scores.cutoff).toLocaleDateString());\n    }\n\n    fetchData();\n  }, []);\n\n  const columns: Column[] = useMemo(\n    () => [\n      {\n        Header: '#',\n        accessor: 'index',\n      },\n      {\n        Header: 'ID',\n        accessor: 'memberId',\n      },\n      {\n        Header: 'Member handle',\n        accessor: 'memberHandle',\n      },\n      {\n        Header: 'Direct Score',\n        accessor: 'totalDirectScore',\n      },\n      {\n        Header: 'Referral Score',\n        accessor: 'totalReferralScore',\n      },\n      {\n        Header: 'Total Score',\n        accessor: 'totalScore',\n      },\n      ...(rawMembersData[0]?.directScores.map((score, index) => ({\n        Header: `Period ${index}`,\n        accessor: `period_${index}`,\n      })) || []),\n    ],\n    [rawMembersData]\n  );\n\n  const data = useMemo(() => {\n    const formatData = rawMembersData;\n    /* .forEach((d: Member, index) => {\n              d.position = index + 1;\n            }) */\n    return formatData\n      .filter((d: Member) => (search ? d.memberHandle.includes(search) : true))\n      .map((d: Member) => ({\n        ...d,\n        ...d.directScores.reduce(\n          (prev, curr, index) => ({\n            ...prev,\n            [`period_${index}`]: curr,\n          }),\n          {}\n        ),\n      }));\n  }, [rawMembersData, search]);\n\n  const handleSearch = useDebounce((e: any, data: any) =>\n    setSearch(data.value)\n  );\n\n  return (\n    <React.StrictMode>\n      <Input placeholder=\"Search handle...\" onChange={handleSearch} />\n      <span style={{ float: 'right' }}>\n        From data processed berofe: {cutoff}\n      </span>\n      <Table id=\"TableTradesHistory\" columns={columns} data={data} />\n    </React.StrictMode>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}